# This is a basic workflow to help you deploy multiple bicep resource.
name: build webapp account bicep
#commenting to run the pipeline

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ manual_changes_poc ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


env:
  AZURE_RESOURCEGROUP_NAME: demo-rg

jobs:
  check_manual_changes:
    name: check_manual_changes
    runs-on: ubuntu-22.04

     # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
            creds: ${{ secrets.AZURE_SPN_CREDENTIAL }}
            
    
      - name: Validate App Service Configuration
        working-directory: '${{github.workspace}}/bicep'

        id: validate_config
        run: |
          
          # Get current App Service configuration
          $currentConfig = Get-AzWebApp -ResourceGroupName demo-rg -Name webAppMNIT2-POC | ConvertTo-Json
  
          # Compare with expected configuration
          $expectedConfig = Get-Content -Path webapp.bicep | ConvertFrom-Json
  
          if ($currentConfig -ne $expectedConfig) {
            Write-Output "Manual changes detected in App Service configuration. Aborting deployment."
            exit 1
          } else {
            Write-Output "No manual changes detected. Proceeding with deployment."
          }

 # This workflow contains a single job called "build"
  bicep_build:
    name: bicep build 
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [check_manual_changes]
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Login to Azure
        uses: azure/login@v1
        with:
            creds: ${{ secrets.AZURE_SPN_CREDENTIAL }}

      - name: 'validate webapp bicep'
        working-directory: '${{github.workspace}}/bicep'
        run: |
          az deployment group validate --resource-group demo-rg --template-file './webapp.bicep' --parameters @parameters.json

      - name: 'what-if bicep'
        working-directory: '${{github.workspace}}/bicep'
        run: |
          az deployment group what-if --resource-group demo-rg --template-file './webapp.bicep' --parameters parameters.json

      - name: 'deploy webapp bicep'
        working-directory: '${{github.workspace}}/bicep'
        run: |
          az deployment group create --resource-group demo-rg --template-file './webapp.bicep' --parameters @parameters.json
          
      - name: List Resources
        run: |
          az resource list -g ${{ env.AZURE_RESOURCEGROUP_NAME }} --output table







#      - name: 'deploy webapp account bicep'
#        working-directory: '${{github.workspace}}/actions/bicep'
#        run: |
#          az deployment group create --resource-group demo-rg --template-file './webapp.bicep' --parameters @parameters.json
          
      
      
#  dev_deployment:
#    name: dev deployment 
#    # The type of runner that the job will run on
#    runs-on: ubuntu-latest
#    needs: [bicep_build]
#    environment: dev
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v2
#
#      - name: Login to Azure
#        uses: azure/login@v1
#        with:
#            creds: ${{ secrets.AZURE_SPN_CREDENTIAL }}
#
#      - name: 'deploy webapp account bicep'
#        working-directory: '${{github.workspace}}/actions/bicep'
#        run: |
#          az deployment group create --resource-group demo-rg --template-file './webapp.bicep' --parameters @parameters.json
#
#  delete_webapp:
#    name: delete webapp account 
#    runs-on: ubuntu-latest
#    needs: [dev_deployment]
#    environment: delete
#    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v2
#
#      - name: Login to Azure
#        uses: azure/login@v1
#        with:
#            creds: ${{ secrets.AZURE_SPN_CREDENTIAL }}
#
#      - name: 'delete a webapp account'
#        working-directory: '${{github.workspace}}/actions/bicep'
#        run: |
#          webappAccountName=$(jq -r '.parameters.webappAccountName.value' parameters.json)
#          mapfile -t resourceGroups < <(az group list --query "[].name" --output tsv)
#      
#          for rg in "${resourceGroups[@]}"; do
#              echo "Resource Group: $rg"
#          
#              mapfile -t webappAccounts < <(az webapp account list --resource-group "$rg" --query "[].name" --output tsv)
#          
#              for sa in "${webappAccounts[@]}"; do
#                                   
#                  echo "  webapp Account Found: $sa, webapp Account To be deleted: $webappAccountName"
#                  if [[ "$sa" == $webappAccountName ]]; then
#                      echo "  webapp Account to delete found: $webappAccountName"
#                      az webapp account delete --name $webappAccountName --resource-group "$rg" --yes
#                  else
#                      echo "  webapp Account to delete not found in $rg"
#                  fi
#          
#                  # Add your logic to delete webapp accounts here
#                  # az webapp account delete --name "$sa" --resource-group "$rg" --yes
#              done
#          done

